import streamlit as st
import pandas as pd
import numpy as np
import pickle
import sklearn

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ scikit-learn –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DataFrame (—á—Ç–æ–±—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä—ã –≤–æ–∑–≤—Ä–∞—â–∞–ª–∏ DataFrame)
sklearn.set_config(transform_output="pandas")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ –∏ –º–∞–∫–µ—Ç
st.set_page_config(page_title="–ü—Ä–æ–≥–Ω–æ–∑ —Ü–µ–Ω –Ω–∞ –¥–æ–º–∞ - –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ",page_icon='üè†', layout="wide")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è)
def load_model():
    try:
        with open("ml_pipelstreamlit run main.pyine.pkl", "rb") as f:
            model = pickle.load(f)
        return model
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
        return None

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
st.title("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Ü–µ–Ω—ã –¥–æ–º–∞")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Ü–µ–Ω—ã.")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
uploaded_file = st.sidebar.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ CSV-—Ñ–∞–π–ª", type="csv")

if uploaded_file is not None:
    try:
        # –ß—Ç–µ–Ω–∏–µ CSV-—Ñ–∞–π–ª–∞ –≤ DataFrame
        data = pd.read_csv(uploaded_file)
        st.subheader("–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        st.dataframe(data.head())
        
        # –ï—Å–ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–æ–ª–±–µ—Ü 'SalePrice', —É–¥–∞–ª—è–µ–º –µ–≥–æ
        if "SalePrice" in data.columns:
            data = data.drop("SalePrice", axis=1)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        model = load_model()
        if model is None:
            st.error("–ú–æ–¥–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
        else:
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
            predictions_log = model.predict(data)
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ª–æ–≥–∞—Ä–∏—Ñ–º—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            predictions = np.exp(predictions_log)
            
            st.subheader("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã")
            results = pd.DataFrame({
                "–ù–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏": range(1, len(predictions) + 1),
                "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞": predictions
            })
            st.dataframe(results)
            st.success("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
else:
    st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.")